{
	"version": 3,
	"file": "discourse-assign.css",
	"sources": [
		"discourse-assign.scss",
		"app/assets/stylesheets/common/foundation/variables.scss",
		"app/assets/stylesheets/common/foundation/math.scss",
		"app/assets/stylesheets/common/foundation/color_transformations.scss",
		"app/assets/stylesheets/common/foundation/mixins.scss"
	],
	"sourcesContent": [
		"$primary: #dddddd !default; $secondary: #222222 !default; $tertiary: #0f82af !default; $quaternary: #c14924 !default; $header_background: #111111 !default; $header_primary: #dddddd !default; $highlight: #a87137 !default; $danger: #e45735 !default; $success: #1ca551 !default; $love: #fa6c8d !default;  $public_image_path: \"https://d2723j7i5e2etm.cloudfront.net/ru/overwatch/images\";  @import \"common/foundation/variables\"; @import \"common/foundation/mixins\"; .user-content {\n  .assign-controls {\n    display: flex;\n    justify-content: flex-end;\n    margin-bottom: 0.5em;\n\n    .assign-messages-assigned {\n      margin-right: 0.5em;\n    }\n  }\n}\n\n.assigned-to {\n  .d-icon,\n  i.fa {\n    margin-right: 0.25em;\n    color: var(--primary-medium);\n  }\n  .assign-text {\n    margin-right: 0.25em;\n  }\n\n  .composer-popup & {\n    margin-left: 0.5em;\n  }\n  .assignee:not(:last-child):after {\n    content: \", \";\n  }\n}\n\n.topic-body {\n  .assigned-to {\n    padding-left: 11px;\n  }\n}\n\n.cant-act-flagged-post {\n  padding: 0.5em;\n  border: 1px dashed var(--primary-medium);\n  color: var(--primary);\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.assigned-to-user {\n  display: flex;\n  align-items: center;\n\n  img.avatar {\n    margin-right: 0.3em;\n  }\n\n  .unassign {\n    margin-left: 0.5em;\n  }\n}\n\n.topic-assigned-to {\n  min-width: 15%;\n  width: 15%;\n}\n\n.list-tags.assigned {\n  margin-left: 5px;\n}\n\n.assign.modal-body .email-group-user-chooser {\n  display: block;\n  width: 300px;\n  margin-top: 5px;\n}\n\n.assign-user-modal p {\n  margin-top: 0;\n}\n\n.assign-suggestions {\n  margin-top: 15px;\n  img {\n    margin-right: 5px;\n    cursor: pointer;\n  }\n\n  .groups {\n    margin-top: 5px;\n    a {\n      margin-right: 5px;\n    }\n  }\n}\n\n.topic-list-item {\n  .private-message-icon {\n    margin-right: 5px;\n  }\n}\n\n#topic-footer-button-assign {\n  padding-top: 0.35em;\n  padding-bottom: 0.35em;\n  .d-button-label {\n    .avatar {\n      margin-right: 0.25em;\n    }\n  }\n}\n\n// Group assigns sidebar nav\n\n.group-assignments {\n  // a little extra space for long names\n  min-width: 250px;\n  li a {\n    display: grid;\n    grid-template-areas: \" avatar names count\";\n    grid-template-columns: auto 1fr auto;\n    align-items: center;\n    padding: 0.5em 13px;\n\n    .assign-image {\n      width: 45px;\n      margin-right: 0.5em;\n      text-align: center;\n      svg {\n        width: 40px;\n        height: 40px;\n      }\n    }\n\n    .assign-names {\n      font-size: $font-down-1;\n      grid-area: names;\n      overflow: hidden;\n      line-height: normal;\n    }\n    .assign-name {\n      @include ellipsis;\n      margin-top: 3px;\n    }\n    .assign-username {\n      font-weight: bold;\n      @include ellipsis;\n    }\n    .assign-count {\n      font-size: $font-up-2;\n      grid-area: count;\n    }\n    .assign-image {\n      grid-area: avatar;\n      a {\n        padding: 0;\n        padding-right: 0.5em;\n      }\n    }\n  }\n  .search {\n    width: 100%;\n  }\n  .search-div {\n    padding: 0 13px;\n  }\n}\n\n.assigned-to.discourse-tag.simple {\n  color: var(--primary-medium);\n}\n",
		"// --------------------------------------------------\n// Variables used throughout the theme\n// --------------------------------------------------\n\n// Layout dimensions\n// --------------------------------------------------\n\n$small-width: 800px !default;\n$medium-width: 995px !default;\n$large-width: 1110px !default;\n\n$topic-body-width: 690px;\n$topic-body-width-padding: 11px;\n$topic-avatar-width: 45px;\n$reply-area-max-width: 1475px !default;\n\n// Brand color variables\n// --------------------------------------------------\n\n$google: #ffffff !default;\n$google-hover: darken($google, 5%) !default;\n$instagram: #e1306c !default;\n$instagram-hover: darken($instagram, 15%) !default;\n$facebook: #1877f2 !default;\n$facebook-hover: darken($facebook, 15%) !default;\n$cas: #70ba61 !default;\n$twitter: #1da1f2 !default;\n$twitter-hover: darken($twitter, 10%) !default;\n$github: #100e0f !default;\n$github-hover: lighten($github, 20%) !default;\n$discord: #7289da !default;\n$discord-hover: darken($discord, 10%) !default;\n\n// Badge color variables\n// --------------------------------------------------\n\n$gold: rgb(231, 195, 0) !default;\n$silver: #c0c0c0 !default;\n$bronze: #cd7f32 !default;\n\n// Fonts\n// --------------------------------------------------\n\n$base-font-family: var(--font-family) !default;\n$base-font-size-smallest: var(--base-font-size-smallest) !default;\n$base-font-size-smaller: var(--base-font-size-smaller) !default;\n$base-font-size: var(--base-font-size) !default;\n$base-font-size-larger: var(--base-font-size-larger) !default;\n$base-font-size-largest: var(--base-font-size-largest) !default;\n$heading-font-family: var(--heading-font-family) !default;\n\n// Font-size definitions, multiplier ^ (step / interval)\n$font-up-6: var(--font-up-6) !default;\n$font-up-5: var(--font-up-5) !default;\n$font-up-4: var(--font-up-4) !default;\n$font-up-3: var(--font-up-3) !default;\n$font-up-2: var(--font-up-2) !default;\n$font-up-1: var(--font-up-1) !default;\n$font-0: var(--font-0);\n$font-down-1: var(--font-down-1) !default;\n$font-down-2: var(--font-down-2) !default;\n$font-down-3: var(--font-down-3) !default;\n$font-down-4: var(--font-down-4) !default;\n$font-down-5: var(--font-down-5) !default;\n$font-down-6: var(--font-down-6) !default;\n\n// Common line-heights\n$line-height-small: var(--line-height-small) !default;\n$line-height-medium: var(--line-height-medium) !default;\n$line-height-large: var(--line-height-large) !default;\n\n@import \"common/foundation/math\";\n\n// Z-index\n// --------------------------------------------------\n\n$z-layers: (\n  \"max\": 9999,\n  \"modal\": (\n    \"tooltip\": 1600,\n    \"popover\": 1500,\n    \"dropdown\": 1400,\n    \"content\": 1300,\n    \"overlay\": 1200,\n  ),\n  \"fullscreen\": 1150,\n  \"mobile-composer\": 1100,\n  \"ipad-header-nav\": 1020,\n  \"header\": 1000,\n  \"footer-nav\": 900,\n  \"tooltip\": 600,\n  \"composer\": (\n    \"dropdown\": 700,\n    \"tooltip\": 600,\n    \"popover\": 500,\n    \"content\": 400,\n  ),\n  \"dropdown\": 300,\n  \"usercard\": 200,\n  \"timeline\": 100,\n  \"base\": 1,\n);\n\n@function map-has-nested-keys($map, $keys...) {\n  @each $key in $keys {\n    @if not map-has-key($map, $key) {\n      @return false;\n    }\n    $map: map-get($map, $key);\n  }\n  @return true;\n}\n\n@function map-deep-get($map, $keys...) {\n  @each $key in $keys {\n    $map: map-get($map, $key);\n  }\n  @return $map;\n}\n\n@function z($layers...) {\n  @if not map-has-nested-keys($z-layers, $layers...) {\n    @warn \"No layer defined for `#{inspect($layers...)}` in $z-layers map. Check variables.scss, property omitted.\";\n  }\n  @return map-deep-get($z-layers, $layers...);\n}\n\n// Box-shadow\n// --------------------------------------------------\n\n$box-shadow: (\n  \"modal\": 0 8px 60px rgba(0, 0, 0, 0.6),\n  \"composer\": 0 -1px 40px rgba(0, 0, 0, 0.12),\n  \"menu-panel\": 0 12px 12px rgba(0, 0, 0, 0.15),\n  \"card\": 0 4px 14px rgba(0, 0, 0, 0.15),\n  \"dropdown\": 0 2px 3px 0 rgba(0, 0, 0, 0.2),\n  \"header\": 0 2px 4px -1px rgba(0, 0, 0, 0.25),\n  \"footer-nav\": 0 0 2px 0 rgba(0, 0, 0, 0.25),\n  \"kbd\": (\n    0 2px 0 rgba(0, 0, 0, 0.2),\n    0 0 0 1px dark-light-choose(#fff, #000) inset,\n  ),\n  \"focus\": 0 0 3px 0 $tertiary,\n  \"focus-danger\": 0 0 6px 0 $danger,\n);\n\n@function shadow($key) {\n  @return map-get($box-shadow, $key);\n}\n\n// Color utilities\n// --------------------------------------------------\n\n// w3c definition of color brightness https://www.w3.org/TR/AERT#color-contrast\n@function dc-color-brightness($color) {\n  @return (\n    (red($color) * 0.299) + (green($color) * 0.587) + (blue($color) * 0.114)\n  );\n}\n\n// Uses an approximation of sRGB blending, GAMMA=2 instead of GAMMA=2.2\n@function srgb-scale($foreground, $background, $percent) {\n  $ratio: ($percent / 100%);\n  $iratio: 1 - $ratio;\n  $f_r2: red($foreground) * red($foreground);\n  $f_g2: green($foreground) * green($foreground);\n  $f_b2: blue($foreground) * blue($foreground);\n  $b_r2: red($background) * red($background);\n  $b_g2: green($background) * green($background);\n  $b_b2: blue($background) * blue($background);\n  $r_r2: $f_r2 * $ratio + $b_r2 * $iratio;\n  $r_g2: $f_g2 * $ratio + $b_g2 * $iratio;\n  $r_b2: $f_b2 * $ratio + $b_b2 * $iratio;\n  $r_r: sqrt($r_r2);\n  $r_g: sqrt($r_g2);\n  $r_b: sqrt($r_b2);\n  @return rgb($r_r, $r_g, $r_b);\n}\n\n// Replaces dark-light-diff($primary, $secondary, 50%, -50%)\n@function blend-primary-secondary($percent) {\n  @return srgb-scale($primary, $secondary, $percent);\n}\n\n@function blend-header-primary-background($percent) {\n  @return srgb-scale($header_primary, $header_background, $percent);\n}\n\n@function dark-light-diff(\n  $adjusted-color,\n  $comparison-color,\n  $lightness,\n  $darkness\n) {\n  @if dc-color-brightness($adjusted-color) <\n    dc-color-brightness($comparison-color)\n  {\n    @return scale-color($adjusted-color, $lightness: $lightness);\n  } @else {\n    @return scale-color($adjusted-color, $lightness: $darkness);\n  }\n}\n@function dark-light-choose($light-theme-result, $dark-theme-result) {\n  @if is-light-color-scheme() {\n    @return $light-theme-result;\n  } @else {\n    @return $dark-theme-result;\n  }\n}\n\n@function is-light-color-scheme() {\n  @if dc-color-brightness($primary) < dc-color-brightness($secondary) {\n    @return true;\n  } @else {\n    @return false;\n  }\n}\n\n@function is-dark-color-scheme() {\n  @return not is-light-color-scheme();\n}\n\n@import \"color_transformations\";\n",
		"// This file:\n// Copyright (c) 2013 Takeru Suzuki\n// Licensed under the MIT license.\n// https://github.com/terkel/mathsass\n\n// Constants\n$E: 2.718281828459045;\n$PI: 3.141592653589793;\n$LN2: 0.6931471805599453;\n$SQRT2: 1.4142135623730951;\n\n@function error($message) {\n  @warn \"#{_error(\"The direction used does not exist\")}\";\n  @return null;\n}\n\n// Returns the factorial of a non-negative integer.\n// @param {Number} $x A non-negative integer.\n// @return {Number}\n// @example\n//     fact(0) // 1\n//     fact(8) // 40320\n@function fact($x) {\n  @if $x < 0 or $x != floor($x) {\n    @warn \"Argument for `fact()` must be a positive integer.\";\n    @return null;\n  }\n  $ret: 1;\n  @while $x > 0 {\n    $ret: $ret * $x;\n    $x: $x - 1;\n  }\n  @return $ret;\n}\n\n// Returns a two-element list containing the normalized fraction and exponent of number.\n// @param {Number} $x\n// @return {List} fraction, exponent\n@function frexp($x) {\n  $exp: 0;\n  @if $x < 0 {\n    $x: $x * -1;\n  }\n  @if $x < 0.5 {\n    @while $x < 0.5 {\n      $x: $x * 2;\n      $exp: $exp - 1;\n    }\n  } @else if $x >= 1 {\n    @while $x >= 1 {\n      $x: $x / 2;\n      $exp: $exp + 1;\n    }\n  }\n  @return $x, $exp;\n}\n\n// Returns $x * 2^$exp\n// @param {Number} $x\n// @param {Number} $exp\n@function ldexp($x, $exp) {\n  $b: if($exp >= 0, 2, 1 / 2);\n  @if $exp < 0 {\n    $exp: $exp * -1;\n  }\n  @while $exp > 0 {\n    @if $exp % 2 == 1 {\n      $x: $x * $b;\n    }\n    $b: $b * $b;\n    $exp: floor($exp * 0.5);\n  }\n  @return $x;\n}\n\n// Returns the natural logarithm of a number.\n// @param {Number} $x\n// @example\n//     log(2)  // 0.69315\n//     log(10) // 2.30259\n@function log($x) {\n  @if $x <= 0 {\n    @return 0 / 0;\n  }\n  $k: nth(frexp($x / $SQRT2), 2);\n  $x: $x / ldexp(1, $k);\n  $x: ($x - 1) / ($x + 1);\n  $x2: $x * $x;\n  $i: 1;\n  $s: $x;\n  $sp: null;\n  @while $sp != $s {\n    $x: $x * $x2;\n    $i: $i + 2;\n    $sp: $s;\n    $s: $s + $x / $i;\n  }\n  @return $LN2 * $k + 2 * $s;\n}\n\n@function ipow($base, $exp) {\n  @if $exp != floor($exp) {\n    @return error(\"Exponent for `ipow()` must be an integer.\");\n  }\n  $r: 1;\n  $s: 0;\n  @if $exp < 0 {\n    $exp: $exp * -1;\n    $s: 1;\n  }\n  @while $exp > 0 {\n    @if $exp % 2 == 1 {\n      $r: $r * $base;\n    }\n    $exp: floor($exp * 0.5);\n    $base: $base * $base;\n  }\n  @return if($s != 0, 1 / $r, $r);\n}\n\n// Returns E^x, where x is the argument, and E is Euler's constant, the base of the natural logarithms.\n// @param {Number} $x\n// @example\n//     exp(1)  // 2.71828\n//     exp(-1) // 0.36788\n@function exp($x) {\n  $ret: 0;\n  @for $n from 0 to 24 {\n    $ret: $ret + ipow($x, $n) / fact($n);\n  }\n  @return $ret;\n}\n\n// Returns base to the exponent power.\n// @param {Number} $base The base number\n// @param {Number} $exp The exponent to which to raise base\n// @return {Number}\n// @example\n//     pow(4, 2)   // 16\n//     pow(4, -2)  // 0.0625\n//     pow(4, 0.2) // 1.31951\n@function pow($base, $exp) {\n  @if $exp == floor($exp) {\n    @return ipow($base, $exp);\n  } @else {\n    @return exp(log($base) * $exp);\n  }\n}\n\n// Returns the square root of a number.\n// @param {Number} $x\n// @example\n//     sqrt(2) // 1.41421\n//     sqrt(5) // 2.23607\n@function sqrt($x) {\n  @if $x < 0 {\n    @return error(\"Argument for `sqrt()` must be a positive number.\");\n  }\n  $ret: 1;\n  @for $i from 1 through 24 {\n    $ret: $ret - (pow($ret, 2) - $x) / (2 * $ret);\n  }\n  @return $ret;\n}\n",
		"// standard color transformations, use these if possible, and add any new dark-light-diffs here\n// any variables defined here can be added in theme color schemes\n// all variables should have the !default flag\n\n//primary\n$primary-very-low: dark-light-diff($primary, $secondary, 97%, -82%) !default;\n$primary-low: dark-light-diff($primary, $secondary, 90%, -78%) !default;\n$primary-low-mid: dark-light-diff($primary, $secondary, 70%, -45%) !default;\n$primary-medium: dark-light-diff($primary, $secondary, 50%, -35%) !default;\n$primary-high: dark-light-diff($primary, $secondary, 30%, -25%) !default;\n$primary-very-high: dark-light-diff($primary, $secondary, 15%, -10%) !default;\n\n$header_primary-low: blend-header-primary-background(10%) !default;\n$header_primary-low-mid: blend-header-primary-background(35%) !default;\n$header_primary-medium: blend-header-primary-background(55%) !default;\n$header_primary-high: blend-header-primary-background(70%) !default;\n$header_primary-very-high: blend-header-primary-background(90%) !default;\n\n//secondary\n$secondary-low: dark-light-diff($secondary, $primary, 70%, -70%) !default;\n$secondary-medium: dark-light-diff($secondary, $primary, 50%, -50%) !default;\n$secondary-high: dark-light-diff($secondary, $primary, 30%, -35%) !default;\n$secondary-very-high: dark-light-diff($secondary, $primary, 7%, -7%) !default;\n\n//tertiary\n$tertiary-very-low: dark-light-diff($tertiary, $secondary, 90%, -75%) !default;\n$tertiary-low: dark-light-diff($tertiary, $secondary, 85%, -65%) !default;\n$tertiary-medium: dark-light-diff($tertiary, $secondary, 50%, -45%) !default;\n$tertiary-high: dark-light-diff($tertiary, $secondary, 20%, -25%) !default;\n$tertiary-hover: dark-light-choose(\n  dark-light-diff($tertiary, $secondary, -25%, -25%),\n  dark-light-diff($tertiary, $primary, 20%, 70%)\n) !default;\n\n//quaternary\n$quaternary-low: dark-light-diff($quaternary, $secondary, 70%, -70%) !default;\n\n//highlight\n$highlight-low: dark-light-diff($highlight, $secondary, 70%, -80%) !default;\n$highlight-medium: dark-light-diff($highlight, $secondary, 50%, -55%) !default;\n$highlight-high: dark-light-diff($highlight, $secondary, -50%, -10%) !default;\n\n//danger\n$danger-low: dark-light-diff($danger, $secondary, 85%, -64%) !default;\n$danger-low-mid: dark-light-diff(\n  rgba($danger, 0.7),\n  $secondary,\n  50%,\n  -60%\n) !default;\n$danger-medium: dark-light-diff($danger, $secondary, 30%, -35%) !default;\n$danger-hover: dark-light-diff($danger, $secondary, -20%, -20%) !default;\n\n//success\n$success-low: dark-light-diff($success, $secondary, 80%, -60%) !default;\n$success-medium: dark-light-diff($success, $secondary, 50%, -40%) !default;\n$success-hover: dark-light-diff($success, $secondary, -20%, -20%) !default;\n\n//love\n$love-low: dark-light-diff($love, $secondary, 85%, -60%) !default;\n\n//wiki\n$wiki: green !default;\n\n//blended variants\n$blend-primary-secondary-5: blend-primary-secondary(5%) !default;\n\n$primary-med-or-secondary-med: dark-light-choose(\n  $primary-medium,\n  $secondary-medium\n) !default;\n\n$primary-med-or-secondary-high: dark-light-choose(\n  $primary-medium,\n  $secondary-high\n) !default;\n\n$primary-high-or-secondary-low: dark-light-choose(\n  $primary-high,\n  $secondary-low\n) !default;\n\n$primary-low-mid-or-secondary-high: dark-light-choose(\n  $primary-low-mid,\n  $secondary-high\n) !default;\n\n$primary-low-mid-or-secondary-low: dark-light-choose(\n  $primary-low-mid,\n  $secondary-low\n) !default;\n\n$primary-or-primary-low-mid: dark-light-choose(\n  $primary,\n  $primary-low-mid\n) !default;\n\n$highlight-low-or-medium: dark-light-choose(\n  $highlight-low,\n  $highlight-medium\n) !default;\n\n$tertiary-or-tertiary-low: dark-light-choose($tertiary, $tertiary-low) !default;\n\n$tertiary-low-or-tertiary-high: dark-light-choose(\n  $tertiary-low,\n  $tertiary-high\n) !default;\n\n$tertiary-med-or-tertiary: dark-light-choose(\n  $tertiary-medium,\n  $tertiary\n) !default;\n\n$secondary-or-primary: dark-light-choose($secondary, $primary) !default;\n\n$tertiary-or-white: dark-light-choose($tertiary, unquote(\"#fff\")) !default;\n$facebook-or-white: dark-light-choose($facebook, unquote(\"#fff\")) !default;\n$twitter-or-white: dark-light-choose($twitter, unquote(\"#fff\")) !default;\n\n// code highlighting\n$hljs-comment: dark-light-choose(unquote(\"#998\"), unquote(\"#bba\")) !default;\n$hljs-number: dark-light-choose(unquote(\"#099\"), unquote(\"#aff\")) !default;\n$hljs-string: dark-light-choose(unquote(\"#d14\"), unquote(\"#f99\")) !default;\n$hljs-literal: dark-light-choose(unquote(\"#458\"), unquote(\"#9ae\")) !default;\n$hljs-tag: dark-light-choose(unquote(\"#000080\"), unquote(\"#99f\")) !default;\n$hljs-attribute: dark-light-choose(\n  unquote(\"#008080\"),\n  unquote(\"#0ee\")\n) !default;\n$hljs-symbol: dark-light-choose(unquote(\"#990073\"), unquote(\"#fbe\")) !default;\n$hljs-bg: dark-light-choose(unquote(\"#f8f8f8\"), unquote(\"#333\")) !default;\n",
		"// --------------------------------------------------\n// Mixins used throughout the theme\n// --------------------------------------------------\n\n// Media queries\n// --------------------------------------------------\n\n$breakpoints: (\n  mobile-small: 320px,\n  mobile-medium: 350px,\n  mobile-large: 450px,\n  mobile-extra-large: 550px,\n  tablet: 768px,\n  medium: 850px,\n  large: 1000px,\n  extra-large: 1140px,\n);\n\n@mixin breakpoint($bp, $rule: max-width, $type: screen) {\n  @media #{$type} and (#{$rule}: map-get($breakpoints, $bp)) {\n    @content;\n  }\n}\n\n// CSS3 properties\n// --------------------------------------------------\n\n// Clearfix\n\n@mixin clearfix() {\n  &:before,\n  &:after {\n    content: \"\";\n    display: table;\n  }\n  &:after {\n    clear: both;\n  }\n}\n\n//noinspection CssOptimizeSimilarProperties\n@mixin linear-gradient($start-color, $end-color) {\n  background-color: $start-color;\n  background-image: linear-gradient(to bottom, $start-color, $end-color);\n}\n\n// Visibility\n// --------------------------------------------------\n\n// Only shows hover on non-touch devices\n@mixin hover {\n  .discourse-no-touch & {\n    &:hover,\n    &.btn-hover {\n      @content;\n    }\n  }\n}\n\n@mixin ellipsis {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n@mixin line-clamp($lines) {\n  display: -webkit-box;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n  -webkit-line-clamp: $lines;\n  -webkit-box-orient: vertical;\n}\n\n//\n// --------------------------------------------------\n\n$vpad: 0.5em;\n$hpad: 0.65em;\n\n// for consistent sizing across inputs, buttons and dropdowns\n@mixin form-item-sizing {\n  border: 1px solid transparent;\n  font-size: var(--font-0);\n  line-height: normal;\n  box-sizing: border-box;\n  padding: $vpad $hpad;\n  .ios-device & {\n    font-size: var(--font-size-ios-input);\n    padding-top: $vpad * 0.8;\n    padding-bottom: $vpad * 0.8;\n  }\n}\n\n@mixin sticky {\n  position: -webkit-sticky;\n  position: sticky;\n}\n\n// Unselectable (avoids unwanted selections with iPad, touch laptops, etc)\n\n@mixin user-select($mode) {\n  -webkit-user-select: $mode;\n  -moz-user-select: $mode;\n  -ms-user-select: $mode;\n  user-select: $mode;\n}\n\n@mixin unselectable {\n  @include user-select(none);\n}\n\n// Stuff we repeat\n@mixin post-aside {\n  border-left: 5px solid var(--primary-low);\n  background-color: var(--blend-primary-secondary-5);\n}\n\n// We still need -webkit for latest iPhone and Safari\n@mixin transform($transforms) {\n  -webkit-transform: $transforms;\n  transform: $transforms;\n}\n\n@mixin appearance-none() {\n  // resets default browser styles\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n}\n\n@mixin default-focus() {\n  border-color: var(--tertiary);\n  outline: 1px solid var(--tertiary);\n  outline-offset: 0;\n}\n\n@mixin fa-rotate($degrees, $rotation) {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation})\";\n  -webkit-transform: rotate($degrees);\n  -ms-transform: rotate($degrees);\n  transform: rotate($degrees);\n}\n\n/// Helper function to easily use an SVG inline in CSS\n/// without encoding it to base64, saving bytes.\n/// It also helps with browser support, especially for IE11.\n///\n/// @author Jakob Eriksen\n/// @link http://codepen.io/jakob-e/pen/doMoML\n/// @param {String} $svg - SVG image to encode\n/// @return {String} - Encoded SVG data uri\n@function svg-uri($svg) {\n  $encoded: \"\";\n  $slice: 2000;\n  $index: 0;\n  $loops: ceil(str-length($svg) / $slice);\n\n  @for $i from 1 through $loops {\n    $chunk: str-slice($svg, $index, $index + $slice - 1);\n    $chunk: str-replace($chunk, '\"', \"'\");\n    $chunk: str-replace($chunk, \"<\", \"%3C\");\n    $chunk: str-replace($chunk, \">\", \"%3E\");\n    $chunk: str-replace($chunk, \"&\", \"%26\");\n    $chunk: str-replace($chunk, \"#\", \"%23\");\n    $encoded: #{$encoded}#{$chunk};\n    $index: $index + $slice;\n  }\n\n  @return url(\"data:image/svg+xml;charset=utf8,#{$encoded}\");\n}\n\n/// Replace `$search` with `$replace` in `$string`\n/// @author Hugo Giraudel\n/// @link http://sassmeister.com/gist/1b4f2da5527830088e4d\n/// @param {String} $string - Initial string\n/// @param {String} $search - Substring to replace\n/// @param {String} $replace ('') - New value\n/// @return {String} - Updated string\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace +\n      str-replace(\n        str-slice($string, $index + str-length($search)),\n        $search,\n        $replace\n      );\n  }\n\n  @return $string;\n}\n\n// SCSS accepts HEX or RGB colors for rgba($color, 0.5)\n// CSS custom properties only accept RGB\n// Example usage:\n\n// --primary-rgb: #{hexToRGB($primary)};\n// ...\n// rgba(var(--primary-low-rgb), 0.5)\n\n@function hexToRGB($hex) {\n  @return red($hex), green($hex), blue($hex);\n}\n\n@function schemeType() {\n  @if is-light-color-scheme() {\n    @return \"light\";\n  } @else {\n    @return \"dark\";\n  }\n}\n\n@function absolute-image-url($path) {\n  // public_image_path is added by the stylesheet importer\n  // it returns a CDN or subfolder path (if applicable).\n  // SCSS will compile (and return the relative path) if public_image_path is missing.\n  @if variable-exists(public_image_path) {\n    @if (str-index(\"#{$path}\", \"/plugins\") == 1) {\n      $plugin_asset_path: str-replace($public_image_path, \"/images\", \"\");\n      @return url(\"#{$plugin_asset_path}#{$path}\");\n    } @else {\n      @return url(\"#{$public_image_path}#{$path}\");\n    }\n  } @else {\n    @return url(\"#{$path}\");\n  }\n}\n"
	],
	"names": [],
	"mappings": "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"
}